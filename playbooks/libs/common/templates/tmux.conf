# split panes using | and -
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Remap window navigation to vim
# No need for modifier
unbind-key C-j
bind-key -n C-j select-pane -D
unbind-key C-k
bind-key -n C-k select-pane -U
unbind-key C-h
bind-key -n C-h select-pane -L
unbind-key C-l
bind-key -n C-l select-pane -R

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# don't rename windows automatically
set-option -g allow-rename off

# configure the tmux command line to behave like Emacs
set-option -g status-keys "emacs"

# set 256 color terminal mode
set-option -g default-terminal "screen-256color"

# increase the length of the status indicator (session name)
set-option -g status-left-length 80
set-option -g status-right-length 100

# resize with SHIFT (fine) and CTRL (coarse)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind c new-window -c '#{pane_current_path}'

# start window numbering at 1
set -g base-index 1

# renumber windows as they are created and destroyed
set -g renumber-windows on

# break a pane out to a new window
bind-key b break-pane -d

# Navigate between sessions
bind-key C-j choose-tree

# navigate between sessions with Control-J
bind -n C-j choose-tree

# increase history size
set -g history-limit 500000

# use the same pane navigation keys between vim and tmux
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-| if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# activity cues
set -g monitor-activity on
set -g visual-activity on
set -g status-interval 30
